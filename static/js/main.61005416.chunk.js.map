{"version":3,"sources":["DropdownList.js","RenderMarkdown.js","SelectedDocument.js","App.js","reportWebVitals.js","index.js"],"names":["DropdownList","elements","onchange","onChange","map","element","className","value","id","RenderMarkdown","render","useState","data","setData","fetch","then","response","text","source","escapeHtml","SelectedDocument","document","documentName","editingDocument","App","selectedDoc","setSelectedDoc","documents","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"+MAgBeA,EAdM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACE,mCACE,wBAAQC,SAAUD,EAAlB,SACGD,EAASG,KAAI,SAACC,GAAD,OACZ,wBAAQC,UAAU,UAA2BC,MAAOF,EAAQE,MAA5D,SACGF,EAAQE,OADsBF,EAAQG,Y,iBCYpCC,EAhBQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACbC,mBAAS,IADI,mBAC9BC,EAD8B,KACxBC,EADwB,KAarC,OAVAC,MAAM,aAAeJ,EAAS,OAC3BK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAEHJ,EADa,SAAXH,GAAgC,sBAAXA,EACfO,EAEA,OAIP,cAAC,IAAD,CAAeC,OAAQN,EAAMO,YAAY,KCAnCC,EAdU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtBC,EAAe,GACfC,EAAkB,GAKtB,MAJiB,sBAAbF,GAAiD,SAAbA,IACtCC,EAAeD,EACfE,EAAkB,qBAGlB,sBAAKjB,UAAU,iBAAf,UACGiB,EADH,IACqBD,MCWVE,EAhBH,WAAO,IAAD,EACsBb,mBAAS,QAD/B,mBACTc,EADS,KACIC,EADJ,KAOhB,OACE,iCACE,cAAC,EAAD,CAAczB,SAAU0B,EAAWzB,SANf,SAAC0B,GACvBF,EAAeE,EAAMC,OAAOtB,UAM1B,cAAC,EAAD,CAAkBc,SAAUI,IAC5B,cAAC,EAAD,CAAgBf,OAAQe,QCLfK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS5B,OACP,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BV,K","file":"static/js/main.61005416.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DropdownList = ({ elements, onchange }) => {\n  return (\n    <>\n      <select onChange={onchange}>\n        {elements.map((element) => (\n          <option className=\"options\" key={element.id} value={element.value}>\n            {element.value}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default DropdownList;\n","import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst RenderMarkdown = ({ render }) => {\n  const [data, setData] = useState(\"\");\n\n  fetch(\"documents/\" + render + \".md\")\n    .then((response) => response.text())\n    .then((text) => {\n      if (render !== \"None\" && render !== \"Select a document\") {\n        setData(text);\n      } else {\n        setData(\"\");\n      }\n    });\n\n  return <ReactMarkdown source={data} escapeHtml={false} />;\n};\n\nexport default RenderMarkdown;\n","import React from \"react\";\n\nconst SelectedDocument = ({ document }) => {\n  let documentName = \"\";\n  let editingDocument = \"\";\n  if (document !== \"Select a document\" && document !== \"None\") {\n    documentName = document;\n    editingDocument = \"Viewing document:\";\n  }\n  return (\n    <div className=\"custom-select \">\n      {editingDocument} {documentName}\n    </div>\n  );\n};\n\nexport default SelectedDocument;\n","import React, { useState } from \"react\";\nimport documents from \"./documents.json\";\nimport DropdownList from \"./DropdownList\";\nimport RenderMarkdown from \"./RenderMarkdown\";\nimport SelectedDocument from \"./SelectedDocument\";\n\nconst App = () => {\n  const [selectedDoc, setSelectedDoc] = useState(\"None\");\n\n  const handleSelection = (event) => {\n    setSelectedDoc(event.target.value);\n  };\n\n  return (\n    <main>\n      <DropdownList elements={documents} onchange={handleSelection} />\n      <SelectedDocument document={selectedDoc} />\n      <RenderMarkdown render={selectedDoc}></RenderMarkdown>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}